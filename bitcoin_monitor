#!/usr/bin/python
import time
import sys
from api import *

sys.path.insert(0, './extern/adafruit/Adafruit_CharLCD')
from Adafruit_CharLCD import Adafruit_CharLCD

# configuration
sleep_delay = 5
currency = 'USD'
use_apis = ['CoinDesk','BlockChain']
raspberry_pi_model_b = True

# don't modify these globals
running = True
apis = []

# attempt to load Adafruit_CharLCD. If it fails, ignore it.
try:
	if raspberry_pi_model_b == True:
		lcd = Adafruit_CharLCD(pins_db=[23, 17, 27, 22])
	else:
		lcd = Adafruit_CharLCD()
	lcd.begin(16,1)
	use_lcd = True
	print("Using 16x2 character lcd for output")
except:
	use_lcd = False
	print("Not using 16x2 character lcd for output")

# create list of all apis in api/ folder
for api in cryptocurrencyapipuller.CryptocurrencyApiPuller.__subclasses__():
	print(api)
	if api.get_name( api() ) in use_apis:
		apis.append( api() )

# if we found the api we want to use
if len(apis) > 0:

	# and still running
	while(running):

		# try to pull price of 1 BTC from chosen api
		try:
			if use_lcd:
				lcd.clear()
			for api in apis:
				message = "1" + api.get_type() + ": "+"{0:.2f}".format(float(api.get_price(currency)))+currency
				if use_lcd:
					lcd.message(message+"\n")
				print(message)
			time.sleep(sleep_delay)

		# quit script if CTRL+C pressed
		except KeyboardInterrupt:
			print("Quitting...")
			running = False
			lcd.finish()
